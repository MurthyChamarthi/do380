---
- name: Set Facts
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  tasks:
  - include_tasks: setup-test.yml
  - set_fact:
      ignore_differences:
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: ''
          creationTimestamp: null
          namespace: ''
          resourceVersion: ''
          selfLink: ''
          uid: ''

- name: Test Provision
  hosts: localhost
  connection: local
  vars:
    provision_role: >-
      {{ lookup('template', 'resources/test-role.yml.j2')
       | from_yaml }}
    rules:
    - apiGroups: ['', 'build.openshift.io']
      resources: ['builds/log']
      verbs: ['get','list']
    - apiGroups: ['', 'build.openshift.io']
      resources: ['buildconfigs','buildconfigs/webhooks','builds']
      verbs: ['get','list','watch']

  roles:
  - role: openshift-provision
    openshift_provision:
      projects:
      - name: provision-test

  tasks:
  - name: Provision Role
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_role }}"

  - name: Get Role
    command: >-
      {{ test_oc_cmd }} get role.authorization.openshift.io -n provision-test
      test-role -o json
    register: get_role
    changed_when: false

  - name: Verify Role
    fail:
      msg: |
        Role not defined as expected
        >>>
        {{ cmp_role | to_yaml }}
        ===
        {{ got_role | to_yaml }}
        <<<
    vars:
      got_role: >-
        {{ get_role.stdout | from_json
         | combine(ignore_differences, recursive=True)
        }}
      cmp_role: >-
        {{ provision_role
         | combine(ignore_differences, recursive=True)
        }}
    when: >-
      cmp_role.metadata != got_role.metadata or
      cmp_role.rules != got_role.rules

- name: Test Reprovision
  hosts: localhost
  connection: local
  vars:
    provision_role: >-
      {{ lookup('template', 'resources/test-role.yml.j2')
       | from_yaml }}
    rules:
    - apiGroups: ['build.openshift.io', '']
      resources: ['builds/log']
      verbs: ['get','list']
    - apiGroups: ['build.openshift.io', '']
      resources: ['builds','buildconfigs','buildconfigs/webhooks']
      verbs: ['watch','get','list']

  tasks:
  - name: Check reprovision Role
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_role }}"
    register: reprovision_role

  - fail:
      msg: Reprovision indicated change to Role
    when: reprovision_role.changed

  - name: Check reprovision Role
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_role }}"
    register: reprovision_role

  - fail:
      msg: Reprovision indicated change to Role
    when: reprovision_role.changed

- name: Test Update
  hosts: localhost
  connection: local
  vars:
    provision_role: >-
      {{ lookup('template', 'resources/test-role.yml.j2')
       | from_yaml }}
    rules:
    - apiGroups: ['build.openshift.io']
      resources: ['builds/log']
      verbs: ['get','list','watch']
    - apiGroups: ['build.openshift.io', '']
      resources: ['buildconfigs','builds']
      verbs: ['get','list','watch']

  tasks:
  - name: Apply update to Role
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_role }}"
    register: do_update

  - name: Check reported update patch
    fail:
      msg: |
        Update patch did not match expected
        >>>
        {{ update_patch | to_yaml }}
        ===
        {{ do_update.patch | to_yaml }}
        <<<
    vars:
      update_patch:
      - op: test
        path: /rules/0/apiGroups/0
        value: ''
      - op: remove
        path: /rules/0/apiGroups/0
      - op: add
        path: /rules/0/verbs/-
        value: watch
      - op: test
        path: /rules/1/resources/1
        value: buildconfigs/webhooks
      - op: remove
        path: /rules/1/resources/1
    when: do_update.patch != update_patch

  - name: Get Role
    command: >-
      {{ test_oc_cmd }} get role.authorization.openshift.io -n provision-test
      test-role -o json
    register: get_role
    changed_when: false

  - name: Verify Update Role
    fail:
      msg: |
        Role not defined as expected
        >>>
        {{ cmp_role | to_yaml }}
        ===
        {{ got_role | to_yaml }}
        <<<
    vars:
      got_role: >-
        {{ get_role.stdout | from_json
         | combine(ignore_differences, recursive=True)
        }}
      cmp_role: >-
        {{ provision_role
         | combine(ignore_differences, recursive=True)
        }}
    when: >-
      cmp_role.metadata != got_role.metadata or
      cmp_role.rules != got_role.rules

- name: Test Delete
  hosts: localhost
  connection: local
  tasks:
  - name: Delete Role
    openshift_provision:
      action: delete
      namespace: provision-test
      connection: "{{ openshift_connection }}"
      resource:
        kind: Role
        metadata:
          name: test-role

  - pause:
      seconds: 1

  - name: Verify Role Delete
    command: >-
      {{ test_oc_cmd }} get role.authorization.openshift.io -n provision-test
      test-role -o json
    register: get_role
    failed_when: get_role.rc == 0
    changed_when: false
