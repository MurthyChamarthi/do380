apiVersion: v1
kind: Template
labels:
  template: widget-factory-deploy-template
metadata:
  annotations:
    description: Template for deploying widget-factory
    tags: demo,java
  name: widget-factory-deploy-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
      group: ${APPLICATION_NAME}
    namespace: "${APPLICATION_NAMESPACE}"
  spec:
    replicas: 0
    selector:
      matchLabels:
        application: ${APPLICATION_NAME}
        group: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          group: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${REGISTRY_URL}:5000/${APPLICATION_NAMESPACE}/${APPLICATION_NAME}:${APPLICATION_RELEASE}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAVA_APP_DIR
            value: /deployments
          - name: SPRING_PROFILES_ACTIVE
            value: openshift
          - name: DB_SVC
            value: ${DB_SVC}
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: ${DB_SVC}
                key: database_name
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: ${DB_SVC}
                key: database_user
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: ${DB_SVC}
                key: database_password
          imagePullPolicy: Always
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      application: ${APPLICATION_NAME}
      group: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: "${APPLICATION_NAMESPACE}"
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
      group: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      application: ${APPLICATION_NAME}
    type: ClusterIP
parameters:
- name: REGISTRY_URL
  value: image-registry.openshift-image-registry.svc
- name: APPLICATION_NAME
  value: widget-factory
- name: APPLICATION_RELEASE
  required: true
- name: APPLICATION_NAMESPACE
  required: true
- name: DB_SVC
  value: mysql